<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>

    <!-- INCLUDE THE HEADER -->
    <%- include('partials/head.ejs') %>
</head>

<body>
    <!-- NAVIGATION PANEL -->
    <%- include('partials/navigation.ejs') %>

        <div class="button-container">
            <!-- BUTTON WITH THE CATEGORIES -->
            <%- include('partials/categories.ejs') %>
        </div>

        <!-- FOOTER -->
        <%- include('partials/footer.ejs') %>
</body>

<script>
    //Identify all the buttons
    const appList = document.getElementById('appList');
    const dataReports = document.getElementById('dataReports');
    const microsoftApps = document.getElementById('microsoftApps');
    const practise = document.querySelector('[data-custom=practise]');
    const training = document.getElementById('training');
    const models = document.getElementById('models');
    const dataDriven = document.getElementById('dataDriven');

    //Add the href attributes with the routes
    appList.setAttribute('href', '/library/appList');
    dataReports.setAttribute('href', '/library/dataAnalyseReports');
    microsoftApps.setAttribute('href', '');
    training.setAttribute('href', '/library/training');
    models.setAttribute('href', '/library/3dModels');
    dataDriven.setAttribute('href', '/library/dataDriven');

    /* Hide the blueprints and the training categorie */
    training.setAttribute('hidden', 'true');

    //Call the metod to apply the funcionality for the microsoft apps div
    applyDropdownFunctionality('microsoftApps', 'buttonContainer');

    //Call the method to apply the funcionality for the practise div
    applyDropdownFunctionality('practise', 'buttonContainer-practise');

    /**
     * Function to apply the funcionality for each section category (hide/show buttons)
     * */
    function applyDropdownFunctionality(elementId, buttonContainerId) {
        //Store the element of the div section
        const element = document.getElementById(elementId);

        //Store the element of the buttons container
        const buttonContainer = document.getElementById(buttonContainerId);

        //Apply the funcionality for the div section
        element.addEventListener('click', function (event) {
            //Prevent default
            event.preventDefault();

            //Check if the button container is hiden...
            if (buttonContainer.classList.contains('hidden')) {
                buttonContainer.classList.remove('hidden');
                buttonContainer.classList.add('fade-in');

                //Apply the funcionality for he Microsoft Apps sections
                if (elementId === 'microsoftApps') {
                    const powerAppsButton = document.getElementById('powerAppsButton');
                    const powerAutomateButton = document.getElementById('powerAutomateButton');

                    if (powerAppsButton && powerAutomateButton) {
                        powerAppsButton.addEventListener('click', function () {
                            window.location.href = '/library/powerApps';
                        });

                        powerAutomateButton.addEventListener('click', function () {
                            window.location.href = '/library/powerAutomate';
                        });
                    }

                    //Apply the funcionality for the practise section
                } else if (elementId === 'practise') {
                    const bestPractiseButton = document.getElementById('bestPractise');
                    const videoStationButton = document.getElementById('videoStation');

                    if (bestPractiseButton && videoStationButton) {
                        bestPractiseButton.addEventListener('click', function () {
                            window.location.href = '/library/bestPractise';
                        });

                        videoStationButton.addEventListener('click', function () {
                            window.location.href = '/library/videoStation';
                        });
                    }
                }

                //In other case...
            } else {
                buttonContainer.classList.remove('fade-in');
                buttonContainer.classList.add('fade-out');

                setTimeout(function () {
                    buttonContainer.classList.add('hidden');
                    buttonContainer.classList.remove('fade-out');
                }, 500);
            }
        });
    }

    /**
     * Function to configure Driver.js
     * */
    function onAnimationComplete() {
        //Instance the object
        const driver = new Driver();

        //Configre the array with the information
        const tourSteps = [
            {
                element: "#practise",
                popover: {
                    title: 'Practise',
                    description: "This category corresponds to best practices. Here you can view the available best practices by factory, category...",
                    position: 'right'
                }
            },
            {
                element: '#dataReports',
                popover: {
                    title: 'Data Analysis Report',
                    description: 'Here you can see all the available reports... remember to use the filters and the search bar to refine your search.',
                    position: 'right',
                },
            },
            {
                element: '#microsoftApps',
                popover: {
                    title: 'Microsoft Apps',
                    description: 'Within this category, you can search for information about Power Apps and Power Automate... remember to ask the user for permission to use them.',
                    position: 'left',
                },
            },
            {
                element: '#dataDriven',
                popover: {
                    title: "Data Driven",
                    description: "This category corresponds to best practices. Here you can view the available best practices by factory, category...",
                    position: "left"
                }
            }
        ];

        //Use the driver object to configure the steps
        driver.defineSteps(tourSteps);

        //Set a time out
        setTimeout(function () {
            driver.start();
        }, 100);

        //Stop the animation
        animation.stop();
    }

    //Apply the funcionality for the lottie container
    document.getElementById('lottie-container').addEventListener('click', function () {
        //Set the speed for the animator
        animation.setSpeed(2);

        //Play the animation
        animation.play();

        //Wait for the animation and call the method
        animation.addEventListener('complete', onAnimationComplete);
    });
</script>

</html>