<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- title%></title>
    <script src="/script/library/spotFire.js"></script>
    <script src="/script/library/getUserID.js"></script>
    <script src="/script/library/information.js"></script>
    <!--INCLUDE THE HEAD-->
    <%- include('partials/head.ejs') %>
</head>

<body>
    <!--MODAL-->
    <%- include('partials/modal.ejs') %>

        <!--TOAST-->
        <%- include('partials/toast.ejs') %>

            <!--NAVIGATION PANEL (ADMIN MODE)-->
            <%- include('partials/navigation_Admin.ejs') %>

                <input type="text" id="ipn" hidden>

                <div class="container">
                    <h1 id="titleCategory"><%-title %></h1>

                    <div class="col-md-9">
                        <a class="btn btn-primary custom-btn" id="add-info-btn" href="/library/addDataReportAdmin">
                            <div class="text">Add information <i class="bi bi-plus-circle"></i></div>
                        </a>

                        <button id="filterButton" class="btn btn-primary custom-btn" type="button"
                            data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample"
                            aria-controls="offcanvasExample">
                            Filters <i class="bi bi-funnel"></i>
                        </button>

                        <!--TABLE OPTIONS-->
                        <%- include('partials/tableOptions.ejs') %> <br>

                            <!--DATATABLE CONTROLS-->
                            <br><%- include('partials/dataTableControl.ejs') %>
                    </div>


                    <br>

                    <!--SPOTFIRE FILTERS-->
                    <%- include('partials/filters_spotFire.ejs') %>
                        <br>
                </div>

                <div class="list" id="list">
                    <div class="table-responsive">
                        <table id="dataTable" class="table table-light table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">ID</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Factory</th>
                                    <th scope="col">Type report</th>
                                    <th scope="col">Platform</th>
                                    <th scope="col">Location/URL</th>
                                    <th scope="col">URL</th>
                                    <th scope="col">Description</th>
                                    <th scope="col">Contact</th>
                                    <th scope="col">Video tutorial</th>
                                    <th scope="col">Data source</th>
                                    <th scope="col">Sent elementals</th>
                                    <th scope="col">Renault</th>
                                    <th scope="col">Function</th>
                                    <th scope="col">Subfunction</th>
                                    <th scope="col">Comments</th>
                                    <th scope="col">UserID</th>
                                </tr>
                            </thead>

                            <tbody id="body"></tbody>
                        </table>
                    </div>
                </div>

                <!--FOOTER-->
                <%- include('partials/footer.ejs') %>
</body>

<script>
    //Initialize the dataTable
    $(document).ready(function () {
        //Configure the buttons and hide columns
        var table = $('#dataTable').DataTable({
            //Configure the columns
            columnDefs: [
                { targets: 0, visible: false },
                { targets: 6, visible: false },
                { targets: 8, visible: false },
                { targets: 9, visible: false },
                { target: 16, visible: false }
            ],

            //Configure the buttons to export the datatable 
            buttons: [
                //Configurate the copy button
                {
                    extend: 'copy',
                    text: 'Copy to clipboard <i class="bi bi-clipboard2-data-fill"></i>',
                    className: 'dropdown-item',
                    exportOptions: {
                        modifier: {
                            selected: true
                        },

                        columns: [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16]
                    }
                },

                //Configurate the excel export button
                {
                    extend: 'excel',
                    text: 'Export to Excel file <i class="bi bi-filetype-xlsx"></i>',
                    className: 'dropdown-item',
                    exportOptions: {
                        modifier: {
                            selected: true,
                        },

                        columns: [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16]
                    }
                },

                //Configurate the hide/show button
                {
                    extend: 'colvis',
                    text: 'Show/Hide columns <i class="bi bi-eye"></i>',
                    className: 'dropdown-item'
                },

                //Configure the personal data source
                {
                    text: 'View the personal list <i class="bi bi-list-ol"></i>',
                    className: 'dropdown-item',
                    action: function (e, dt, node, config) {
                        //Store the IPN of the user
                        const ipn = document.getElementById('ipn').value;

                        //Filter the dataTable using the userID column and the value of the ipn hidden input
                        $('#dataTable').DataTable().column(16).search(ipn).draw();

                        //Identify the toast
                        const toast = document.getElementById('liveToast');

                        //Add the message and the  button to the body of the toast
                        $('#liveToast .toast-body').html(
                            `
                                <p>If you want to return to the normal list, make a clic on the "Return to normal list"<p>
                                <button onclick="returnNormalList(16)" type="button" class="btn btn-primary btn-sm">Return to normal list</button>
                            `
                        );

                        //Configure the header of the toast
                        $('#liveToast .toast-header').html(
                            `
                                <img src="/assets/library/HORSE_FAVICON.ico" class="rounded me-2" style="width: 50px; height: 50px;">
                                <strong class="me-auto">Digital Library</strong>
                            `
                        );

                        //Configure the toast
                        const toastBootstrap = new bootstrap.Toast(toast, {
                            autohide: false
                        });

                        //Show the toast
                        toastBootstrap.show();
                    }
                }
            ],
        });

        //Add the buttons to the dropdown
        $('#dropdown').append(table.buttons().container());

        //Apply the funcionabiity to the left button
        $('#scrollLeftButton').click(function () {
            $('#list').animate({
                'marginLeft': "-=250px"
            })
        });

        //Apply the funcionability to the rigth button
        $('#scrollRightButton').click(function () {
            $('#list').animate({
                'marginLeft': "+=200px"
            });
        });

        //Apply the funcionability to the reset position
        $('#scrollResetButton').click(function () {
            $('#list').animate({
                'marginLeft': "0px"
            });
        });

        //Appy the funcionability to the row of the dataTable
        $('#dataTable tbody').on('click', 'tr', function () {
            //Store the row information into a variable
            var rowData = table.row(this).data();

            //Create an array to store the index wich we want to show the modal
            const columnIndex = [0, 1, 2, 3, 5, 7, 8, 9, 10, 11]

            //Store the index of the actual column
            var clickedColumnIndex = $(event.target).closest('td').index();

            //Configure the title of the modal
            $('.modal-title').text(rowData[1]);

            //Check if the actual index of the column is in the array with the available index
            if (columnIndex.includes(clickedColumnIndex)) {
                //Configure the body of the modal
                $('#modal .modal-body').html(`
                    <table id="modal-table" class="table table-striped">
                        <thead>
                        <tr>
                            <th>Title</th>
                            <th>Factory</th>
                            <th>Type Report</th>
                            <th>Platform</th>
                            <th id="urlColumn">Location/URL</th>
                            <th id="descriptionColumn">Description</th>
                            <th id="contactColumn">Contact</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <th>` + rowData[1] + `</th>
                            <th>` + rowData[2] + `</th>
                            <th>` + rowData[3] + `</th>
                            <th>` + rowData[4] + `</th>
                            <th>` + rowData[5] + `</th>
                            <th>` + rowData[7] + `</th>
                            <th>` + rowData[8] + `</th>
                        </tr>
                        
                        </tbody>
                    </table>
                `);

                //Create a temporally div to extract the information
                var temElement = document.createElement('div');

                //Add the HTML of the contact column
                temElement.innerHTML = rowData[7];

                //Store the information of the contact
                var emailText = temElement.textContent;

                //Add the HTML of the URL
                temElement.innerHTML = rowData[5];

                //Store the information of the URL
                var urlText = temElement.textContent;

                //Add the HTML of the video tutorial
                temElement.innerHTML = rowData[8];

                //Store the information of the video tutorial
                var videoTutorialText = temElement.textContent;

                //Use the CSS selector to find the button
                const button = document.querySelector('.btn.btn-primary');
                let url = "";

                //If the button was found
                if (button) {
                    //Store the attribute of the button
                    const onclickAttribute = button.getAttribute('onclick');

                    //If we have the attribute
                    if (onclickAttribute) {
                        /** Store the URL from the attribute */
                        const urlStartIndex = onclickAttribute.indexOf("'") + 1;
                        const urlEndIndex = onclickAttribute.lastIndexOf("'");
                        url = onclickAttribute.substring(urlStartIndex, urlEndIndex);

                        //Apply the funcionability to the button of the table modal
                        $('#modal-table tbody tr td:nth-child(5)').html(`<a href="${url}" target="_blank">${url}</a>`);
                    } else {
                        console.log("El botón no tiene atributo onclick.");
                    }
                } else {
                    console.log("No se encontró ningún botón con la clase '.btn.btn-primary'.");
                }

                //Check if the column of the contact has information
                if (emailText == '') {
                    $('#modal-table th#contactColumn').hide()
                }

                //Check if the column of the URL/Location has information
                if (urlText == '') {
                    $('#modal-table th#urlColumn').hide()
                }

                //Store the IPN of the login user
                const ipn = document.getElementById('ipn').value;

                //Check if the IPN of the actual user match with the creator of the data source
                if (ipn === rowData[16]) {
                    //Add the neccesary buttons
                    $('#modal .modal-footer').html(
                        `
                            <button type="button" class="btn btn-outline-danger" data-bs-target="#modalConfirmDelete"
                                data-bs-toggle="modal" id="deleteButtonMainModal"><i class="bi bi-trash-fill"></i> Delete</button>
                            <button type="button" class="btn btn-primary" id="updateRow"><i class="bi bi-pencil-square"></i> Update</button>                                              
                        `
                    );

                    //Apply the funcionability to the update button of the modal
                    $('#updateRow').on('click', function () {
                        //Convert the row information into JSON 
                        const rowDataJson = encodeURIComponent(JSON.stringify(rowData));

                        //Redirect to the page to upload the data source and we send the data source information in the URL
                        window.location.href = `/library/editDataReportAdmin?data=${rowDataJson}`;
                    });

                    //Only add the close button
                } else {
                    $('#modal .modal-footer').html(
                        `
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        `
                    );
                }

                //Show the modal
                $('#modal').modal('show');

                //Apply the funcionability to the update button of the modal
                $('#updateRow').on('click', function () {
                    rowData[5] = url;

                    //Convert the row information into JSON 
                    const rowDataJson = encodeURIComponent(JSON.stringify(rowData));

                    //Redirect to the page to upload the data source and we send the data source information in the URL
                    window.location.href = `/library/editDataReportAdmin?data=${rowDataJson}`;
                });
            }

            //Configure the title of the confirm delete modal
            $('#modalConfirmDelete .modal-title').text('Do you want to delete this source?');

            //Configure the body of the delete modal
            $('#modalConfirmDelete .modal-body').text(rowData[1]);

            //Configure the funcionability to the confirm button of the delete modal of the data source
            $('#deleteRow').on('click', function () {
                //Call the end point to delete the data source using the ID and the name of the table
                fetch(`/library/api/delete-row/${rowData[0]}/${"spotfire"}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error deleting the record');
                        }

                        //Hide the delete modal
                        $('#modalConfirmDelete').modal('hide');

                        //Call the method to display the alert
                        deleteElement("Item successfully deleted. Reloading page");
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    });

    //Configre the array with the information
    const tourSteps = [
        {
            element: '#titleCategory',
            popover: {
                title: 'Data Analyse Report',
                description: "Within this category, you can add new reports, consult reports from other people, as well as delete and update the information of your own reports.",
                position: 'bottom'
            }
        },
        {
            element: '#add-info-btn',
            popover: {
                title: 'Add information',
                description: "By clicking this button, you can add your own report by completing a form.",
                position: 'bottom'
            }
        },
        {
            element: '#filterButton',
            popover: {
                title: 'Filters',
                description: 'If you press this button, you can display a menu where you can make use of the available filters',
                position: 'bottom'
            }
        },
        {
            element: '#tableOptions',
            popover: {
                title: 'Table otions',
                description: "Within this dropdown, you can export the information from the table in Excel format, hide or show columns, and even view your own reports.",
                position: 'bottom',
            },
        },
        {
            element: '#dataTableControls',
            popover: {
                title: 'Table controls',
                description: 'In case you want to move the table, you can click on the buttons to move it... the middle button is used to move the table back to its original position.',
                position: 'bottom',
            },
        },
        {
            element: "#dt-search-0",
            popover: {
                title: 'Search bar',
                description: 'By using the search bar, you can filter through all the elements of the table... such as the report title, factory, platform...',
                position: 'left'
            }
        },
        {
            element: "#dt-length-0",
            popover: {
                title: 'Entries per page',
                description: "Here you can set the number of entries you want to display in the table.",
                position: 'right'
            }
        }
    ];
</script>

</html>