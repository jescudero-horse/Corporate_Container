<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- title%></title>
    <!--INCLUDE HEAD-->
    <%- include('partials/head.ejs') %>
        <script src="/script/library/powerAutomate.js"></script>
        <script src="/script/library/getUserID.js"></script>
        <script src="/script/library/information.js"></script>
</head>

<body>
    <!-- MAIN MODAL -->
    <%- include('partials/modal.ejs') %>

        <!-- TOAST -->
        <%- include('partials/toast.ejs') %>

            <!--NAVIGATION PANEL (ADMIN MODE)-->
            <%- include('partials/navigation_Admin.ejs') %>

                <div class="container">
                    <h1 id="titleCategory"><%-title %></h1>

                    <input type="text" id="ipn" hidden>

                    <div class="col-md-4">
                        <a class="btn btn-primary" id="button" , href="/library/addPowerAutomate">
                            <div class="text">Add information <i class="bi bi-plus-circle"></i></div>
                        </a>

                        <div class="btn-group" role="group">
                            <div class="dropdown">
                                <button id="tableOptions" class="btn btn-secondary dropdown-toggle" data-bs-auto-close="outside"
                                    type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Table options
                                </button>

                                <ul class="dropdown-menu" id="dropdown">
                                </ul>
                            </div>
                        </div>
                    </div>

                    <br>

                    <!--DATATABLE POWER AUTOMATE-->
                    <%- include('partials/dataTablePowerAutomate.ejs') %>
                </div>

                <!--FOOTER-->
                <%- include('partials/footer.ejs') %>
</body>

<script>
    //Initialize the dataTable
    $(document).ready(function () {
        //Store in  variable de dataTable component
        var table = $('#dataTable').DataTable({

            //Hide the ID and the userID column
            columnDefs: [
                { targets: 0, visible: false },
                { targets: 7, visible: false }
            ],

            //Configure the buttons to export the datatable 
            buttons: [
                //Configurate the copy button
                {
                    extend: 'copy',
                    text: 'Copy to clipboard <i class="bi bi-clipboard2-data-fill"></i>',
                    className: 'dropdown-item',
                    exportOptions: {
                        modifier: {
                            selected: true
                        }
                    }
                },

                //Configurate the excel export button
                {
                    extend: 'excel',
                    text: 'Export to Excel file <i class="bi bi-filetype-xlsx"></i>',
                    className: 'dropdown-item',
                    exportOptions: {
                        modifier: {
                            selected: true,
                        }
                    }
                },

                //Configurate the hide/show button
                {
                    extend: 'colvis',
                    text: 'Show/Hide columns <i class="bi bi-eye"></i>',
                    className: 'dropdown-item'
                },

                //Configure the personal PowerApps source
                {
                    text: 'View the personal list <i class="bi bi-list-ol"></i>',
                    className: 'dropdown-item',
                    action: function (e, dt, node, config) {
                        //Store the IPN of the user
                        const ipn = document.getElementById('ipn').value;

                        //Filter the dataTable using the userID column and the value of the ipn hidden input
                        $('#dataTable').DataTable().column(7).search(ipn).draw();

                        //Identify the toast
                        const toast = document.getElementById('liveToast');

                        //Add the message and the  button to the body of the toast
                        $('#liveToast .toast-body').html(
                            `
                                <p>If you want to return to the normal list, make a clic on the "Return to normal list"<p>
                                <button onclick="returnNormalList(6)" type="button" class="btn btn-primary btn-sm">Return to normal list</button>
                            `
                        );

                        //Configure the header of the toast
                        $('#liveToast .toast-header').html(
                            `
                                <img src="/assets/library/HORSE_FAVICON.ico" class="rounded me-2" style="width: 50px; height: 50px;">
                                <strong class="me-auto">Digital Library</strong>
                            `
                        )

                        //Configure the toast
                        const toastBootstrap = new bootstrap.Toast(toast, {
                            autohide: false
                        });

                        //Show the toast
                        toastBootstrap.show();
                    }
                }
            ]
        });

        //Add the buttons to the dropdown
        $('#dropdown').append(table.buttons().container());

        //Appy the funcionability to the row of the dataTable
        $('#dataTable tbody').on('click', 'tr', function () {
            //Store the row information into a variable
            var rowData = table.row(this).data();

            //Create an array to store the index wich we want to show the modal
            const columnIndex = [0, 1, 3, 4];

            //Store the index of the actual column
            var clickedColumnIndex = $(event.target).closest('td').index();

            //Configure the title of the modal
            $('#modal .modal-title').text('Row Details: ' + rowData[1]);

            console.log("Row Data: ", rowData);

            //Check if the actual index of the column is in the array with the available index
            if (columnIndex.includes(clickedColumnIndex)) {
                //Configure the body of the modal
                $('#modal .modal-body').html(`
                    <table id="modal-table" class="table table-striped">
                        <thead>
                        <tr>
                            <th>Flow name</th>
                            <th>Flow ID</th>
                            <th>Owner</th>
                            <th>State</th>
                            <th>Description</th>
                            <th class="urlColumn">URL</th>
                            <th>Factory</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <th>` + rowData[1] + `</th>
                            <th>` + rowData[2] + `</th>
                            <th>` + rowData[3] + `</th>
                            <th>` + rowData[4] + `</th>
                            <th>` + rowData[5] + `</th>
                            <td class="urlColumn">` + (rowData[6] != null ? rowData[6] : '') + `</td>
                            <th>` + rowData[8] + `</th>
                        </tr>
                        
                        </tbody>
                    </table>
                `);

                //If the URL column is NULL
                if (rowData[6] == '' || rowData[6] == null) {
                    //Hide the column in the modal table
                    $('#modal-table .urlColumn').hide();
                }

                //Store the IPN of the user
                const ipn = document.getElementById('ipn').value;

                //Check if the IPN of the actual user is the creator of the PowerApp
                if (ipn === rowData[7]) {
                    //Add the neccesary buttons
                    $('#modal .modal-footer').html(
                        `
                            <button type="button" class="btn btn-outline-danger" data-bs-target="#modalConfirmDelete"
                                data-bs-toggle="modal" id="deleteButtonMainModal"><i class="bi bi-trash-fill"></i> Delete</button>
                            <button type="button" class="btn btn-primary" id="updateRow"><i class="bi bi-pencil-square"></i> Update</button>                                              
                        `
                    );

                    //Apply the funcionability to the update button of the modal
                    $('#updateRow').on('click', function () {
                        /** Create an instance of the buttons to extract the URL */
                        const buttonProject = document.querySelector('.url-to-project');

                        //If the source doesnt have the URL
                        if (rowData[5] == '' || rowData[5] == null) {
                            //Assign empty value
                            rowData[5] == '';

                            //In other case...
                        } else {
                            /** Store the URL for each button */
                            const urlProject = obtainURL(buttonProject);

                            /** Assign the URLs to each position */
                            rowData[6] = urlProject;
                        }

                        //Convert the row information into JSON 
                        const rowDataJson = encodeURIComponent(JSON.stringify(rowData));

                        //Redirect to the page to upload the data source and we send the data source information in the URL
                        window.location.href = `/library/editPowerAutomate?data=${rowDataJson}`;
                    });

                    //Only add the close button
                } else {
                    $('#modal .modal-footer').html(
                        `
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        `
                    );
                }

                //Show the modal
                $('#modal').modal('show');
            }

            //Configure the title of the confirm delete modal
            $('#modalConfirmDelete .modal-title').text('Do you want to delete this source?');

            //Configure the body of the delete modal
            $('#modalConfirmDelete .modal-body').text(rowData[1]);

            //Configure the funcionability to the confirm button of the delete modal of the data source
            $('#deleteRow').on('click', function () {
                //Call the end point to delete the data source using the ID and the name of the table
                fetch(`/library/api/delete-row/${rowData[0]}/${"powerAutomate"}`, {
                    method: 'DELETE'
                })
                    //Control the response
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error deleting the record');
                        }

                        //Hide the delete modal
                        $('#modalConfirmDelete').modal('hide');

                        //Call the method to display the delete alert
                        deleteElement("Item successfully deleted. Reloading page");
                    })

                    //Control the error
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    });

    /**
     * Function to obtein the URL from a button
     * */
    function obtainURL(button) {
        //Store the onClick attribute of the button
        const onclickAttribute = button.getAttribute('onclick');

        //Create a variable to store the URL
        let url;

        //If the button has the onClick attribute...
        if (onclickAttribute) {
            /** Store the URL */
            const urlStartIndex = onclickAttribute.indexOf("'") + 1;
            const urlEndIndex = onclickAttribute.lastIndexOf("'");
            url = onclickAttribute.substring(urlStartIndex, urlEndIndex);

            //In other case...
        } else {
            console.log("El botón no tiene el atributo onclick");
            url = null;
        }

        return url;
    }

    //Configre the array with the information
    const tourSteps = [
        {
            element: "#titleCategory",
            popover: {
                title: 'Power Automate',
                description: "Power Automate is a Microsoft tool that allows you to automate tasks and processes between different applications and services. Its main goal is to simplify daily work, saving time and effort by enabling users to create automated workflows without the need for programming knowledge. Within this category, you can add information, consult flows from other people, as well as view/manage your own.",
                position: 'rigth'
            }
        },
        {
            element: "#button",
            popover: {
                title: 'Add information',
                description: "By clicking this button, you can add a new Power Automate by completing a simple form.",
                position: 'bottom'
            }
        },
        {
            element: "#tableOptions",
            popover: {
                title: 'Table options',
                description: "By clicking this button, a series of options will appear... you will be able to export the information to an Excel file, hide/show columns, and view the Power Automates you have uploaded to the Digital Library.",
                position: 'rigth'
            }
        },
        {
            element: "#dt-search-0",
            popover: {
                title: 'Search bar',
                description: 'By using the search bar, you can filter through all the elements of the table... such as the flow name, owner...',
                position: 'left'
            }
        },
        {
            element: "#dt-length-0",
            popover: {
                title: 'Entries per page',
                description: "Here you can set the number of entries you want to display in the table.",
                position: 'right'
            }
        }
    ];
</script>

</html>